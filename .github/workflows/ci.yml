name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  formatting:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Run Spotless check
        run: ./gradlew spotlessCheck

  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Cache Gradle build and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Compile main and test classes
        run: ./gradlew testClasses

  linting:
    name: Linting Check
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Cache Gradle build and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [compile, linting]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Cache Gradle build and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Run tests
        run: ./gradlew test

  build-javadoc:
    name: Compile Javadoc
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [compile, linting]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle build and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Generate Javadoc
        run: ./gradlew javadoc
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/docs/javadoc/
          name: 'javadoc'

  deploy-javadoc:
    name: Deploy Javadoc
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-javadoc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: 'javadoc'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ formatting, linting, compile, unit-test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle build and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      - name: Run full build
        run: ./gradlew build -x spotlessCheck -x checkstyleMain -x checkstyleTest -x test