name: Generate Latest PR Badge

on:
  schedule:
    - cron: "0 * * * *"    # every hour
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  badge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch latest PR info and generate badge
        run: |
          # Check if there are any closed PRs
          pr_count=$(gh pr list --state closed --json number | jq length)
          
          if [ "$pr_count" -eq 0 ]; then
            echo "No closed PRs found"
            pr_message="No closed PRs"
            pr_color="lightgrey"
          else
            # Get the latest closed PR info
            pr_data=$(gh pr list --limit 1 --state closed --json number,title)
            pr_number=$(echo "$pr_data" | jq -r '.[0].number')
            pr_title=$(echo "$pr_data" | jq -r '.[0].title')
            
            # Escape special characters for JSON
            pr_title_escaped=$(echo "$pr_title" | sed 's/"/\\"/g' | sed 's/\\/\\\\/g')
            pr_message="#${pr_number}: ${pr_title_escaped}"
            pr_color="green"
            
            echo "Latest closed PR: $pr_message"
          fi

          # Create the img directory if it doesn't exist
          mkdir -p img

          # Generate the badge JSON with proper escaping
          cat > img/latest-pr.json <<EOF
          {
            "schemaVersion": 1,
            "label": "latest closed PR",
            "message": "${pr_message}",
            "color": "${pr_color}"
          }
          EOF

          echo "Generated badge JSON:"
          cat img/latest-pr.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        id: changes
        run: |
          git add img/latest-pr.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push badge JSON
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore: update latest PR badge [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}